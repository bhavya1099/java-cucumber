// ********RoostGPT********
/*
Test generated by RoostGPT for test javaspring-unit-test using AI Type Open AI and AI Model gpt-4
ROOST_METHOD_HASH=getDifference_8e14ab318e
ROOST_METHOD_SIG_HASH=getDifference_0b169691c7
Here are your existing test cases which we found out and are not considered for test generation:
File Path: /var/tmp/Roost/RoostGPT/javaspring-unit-test/1734331464/source/java-cucumber/src/test/java/br/masmangan/beecrowd/bee1007/ProductSteps.java
Tests:
    "@Test
@When("difference is calculated")
public void different_is_calculated() {
    actual = product.getDifference();
}
"Scenario 1: Test when all parameters are positive  
Details:  
    TestName: testWhenAllParametersArePositive  
    Description: This test checks the functionality of the getDifference method when all parameters are positive.  
  Execution:  
    Arrange: Set values a=4, b=3, c=2, and d=1.  
    Act: Invoke the getDifference method.  
    Assert: Assert that the result is 10.  
  Validation:  
    The test verifies that the getDifference method correctly calculates the difference when all parameters are positive. The expected result is 10 because (4*3)-(2*1)=10. This test is significant as it verifies the basic functionality of the method.
Scenario 2: Test when all parameters are zero  
Details:  
    TestName: testWhenAllParametersAreZero  
    Description: This test checks the functionality of the getDifference method when all parameters are zero.  
  Execution:  
    Arrange: Set values a=0, b=0, c=0, and d=0.  
    Act: Invoke the getDifference method.  
    Assert: Assert that the result is 0.  
  Validation:  
    The test verifies that the getDifference method correctly calculates the difference when all parameters are zero. The expected result is 0 because (0*0)-(0*0)=0. This test is significant as it checks the method's behavior with zero values.
Scenario 3: Test when parameters are negative  
Details:  
    TestName: testWhenParametersAreNegative  
    Description: This test checks the functionality of the getDifference method when the parameters are negative.  
  Execution:  
    Arrange: Set values a=-2, b=-3, c=-1, and d=-2.  
    Act: Invoke the getDifference method.  
    Assert: Assert that the result is 0.  
  Validation:  
    The test verifies that the getDifference method correctly calculates the difference when the parameters are negative. The expected result is 0 because (-2*-3)-(-1*-2)=0. This test is significant as it checks the method's behavior with negative values.
Scenario 4: Test when parameters are a mix of positive and negative values  
Details:  
    TestName: testWhenParametersAreMixed  
    Description: This test checks the functionality of the getDifference method when the parameters are a mix of positive and negative values.  
  Execution:  
    Arrange: Set values a=2, b=-3, c=1, and d=-2.  
    Act: Invoke the getDifference method.  
    Assert: Assert that the result is -10.  
  Validation:  
    The test verifies that the getDifference method correctly calculates the difference when the parameters are a mix of positive and negative values. The expected result is -10 because (2*-3)-(1*-2)=-10. This test is significant as it checks the method's behavior with mixed values.
*/
// ********RoostGPT********
package br.masmangan.beecrowd.bee1007;
import org.junit.jupiter.api.*;
import org.junit.jupiter.api.*;

@Tag("br.masmangan.beecrowd.bee1007")
@Tag("br.masmangan.beecrowd.bee1007.getDifference")
def add_two_numbers(num1, num2):
    return num1 + num2
print(add_two_numbers(5, 3))